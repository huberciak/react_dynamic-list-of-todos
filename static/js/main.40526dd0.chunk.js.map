{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSelect","useState","title","setTitle","filter","setFilter","filterTodos","todo","toLowerCase","includes","completed","className","type","placeholder","value","onChange","event","target","map","checked","readOnly","onClick","userId","id","API_URL","getUser","fetch","then","response","json","CurrentUser","undefined","selectedUser","setSelectedUser","loadUser","useCallback","a","user","useEffect","name","email","phone","App","setTodos","selectedUserId","setSelectedUserId","loadTodos","load","selectUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.40526dd0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './TodoList.scss';\n\ninterface Props {\n  todos: Todo[];\n  onSelect: (userId: number) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelect,\n}) => {\n  const [title, setTitle] = useState('');\n  const [filter, setFilter] = useState('All');\n\n  let filterTodos = todos.filter(todo => (\n    todo.title.toLowerCase().includes(title.toLowerCase())\n  ));\n\n  switch (filter) {\n    case 'active':\n      filterTodos = filterTodos.filter(todo => !todo.completed);\n      break;\n    case 'completed':\n      filterTodos = filterTodos.filter(todo => todo.completed);\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <input\n        type=\"text\"\n        placeholder=\"Title...\"\n        data-cy=\"filterByTitle\"\n        value={title}\n        onChange={(event) => setTitle(event.target.value)}\n      />\n\n      <select\n        value={filter}\n        onChange={(event) => setFilter(event.target.value)}\n      >\n        <option value=\"all\">All</option>\n        <option value=\"active\">Not Completed</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\" data-cy=\"listOfTodos\">\n          {filterTodos.map(todo => (\n            <li\n              key={todo.id}\n            >\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className=\"\n                TodoList__user-button\n                TodoList__user-button--selected\n                button\n              \"\n                type=\"button\"\n                data-cy=\"userButton\"\n                onClick={() => onSelect(todo.userId)}\n              >\n                <span>{`User #${todo.userId}`}</span>\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","const API_URL = 'https://mate.academy/students-api';\n\nexport function getTodos(): Promise<Todo[]> {\n  return fetch(`${API_URL}/todos`)\n    .then(response => response.json());\n}\n\nexport function getUser(userId: number): Promise<User> {\n  return fetch(`${API_URL}/users/${userId}`)\n    .then(response => response.json());\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport './CurrentUser.scss';\n\ninterface Props {\n  userId: number;\n  onSelect: (userId: number) => void;\n}\n\nexport const CurrentUser: React.FC<Props> = ({\n  userId,\n  onSelect,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | undefined>(undefined);\n\n  const loadUser = useCallback(async () => {\n    const user = await getUser(userId);\n\n    setSelectedUser(user);\n  }, [userId]);\n\n  useEffect(() => {\n    loadUser();\n  }, [userId]);\n\n  return selectedUser\n    ? (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${selectedUser.id}`}</span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\" data-cy=\"userName\">\n          {selectedUser.name}\n        </h3>\n        <p className=\"CurrentUser__email\">{selectedUser.email}</p>\n        <p className=\"CurrentUser__phone\">{selectedUser.phone}</p>\n\n        <button\n          type=\"button\"\n          className=\"CurrentUser__clear button\"\n          onClick={() => onSelect(-1)}\n        >\n          Clear\n        </button>\n      </div>\n    )\n    : (<div>User does not exist</div>);\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api';\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n\n  const loadTodos = async () => {\n    const load = await getTodos();\n\n    setTodos(load);\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const selectUser = (userId: number) => {\n    setSelectedUserId(userId);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={todos}\n          onSelect={selectUser}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              userId={selectedUserId}\n              onSelect={selectUser}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}